@startuml

SystemHandler "0..n" *--> Publisher
SystemHandler "0..n" *--> Subscriber
SystemHandler *--> Participant

Participant <-- Publisher
Participant <-- Subscriber

Publisher ..> Conversion
Subscriber ..> Conversion

class SystemHandler {
    + configure() override
    + okay() override
    + spin_once() override
    + subscribe() override
    + advertise() override
}

class Participant {
    - fast::participant participant
    - map<string, fast::DynamicPubSubType> topics
    - map<string, string> topic_to_type
    + get_dds_participant()
    + register_dynamic_type(name, builder)
    + create_dynamic_data(name)
    + get_dynamic_type(name)
}

class Publisher {
    - fast::Publisher
    - fast:DynamicData
    - std::string topic_name
    + publish(xtypes::DynamicData) override
}

class Subscriber {
    - fast::Subscriber
    - fast:DynamicData
    - std::string topic_name
    - DynamicType message_type
    - SubscriptionCallback
    - std::vector<std::thread> reception_threads_
    + receive(fast::DynamicData)
}

class Conversion << (S,#FF7700) Singleton >> {
    + fast::DynamicData soss_to_dds(xtypes::DynamicData)
    + xtypes::DynamicData dds_to_soss(fast::DynamicData)
}

@enduml

